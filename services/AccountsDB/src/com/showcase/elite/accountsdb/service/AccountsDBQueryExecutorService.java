/*Copyright (c) 2022-2023 wavemaker.com All Rights Reserved.This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.showcase.elite.accountsdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.export.ExportOptions;

import com.showcase.elite.accountsdb.models.query.*;

public interface AccountsDBQueryExecutorService {

    GetUserByEmailResponse executeGetUserByEmail(String email);

    Integer executeUpdateMultipleTransactionStatus(UpdateMultipleTransactionStatusRequest updateMultipleTransactionStatusRequest);

    Page<GetFrequentTransactionsResponse> executeGetFrequentTransactions(String beneficiaryId, Pageable pageable);

    void exportGetFrequentTransactions(String beneficiaryId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetMostFrequentTransactionsResponse> executeGetMostFrequentTransactions(Integer corporateId, Pageable pageable);

    void exportGetMostFrequentTransactions(Integer corporateId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAccountsSummaryByTypeResponse> executeGetAccountsSummaryByType(Integer corporateId, Pageable pageable);

    void exportGetAccountsSummaryByType(Integer corporateId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetOverallTransactionsResponse> executeGetOverallTransactions(Integer corporateId, Pageable pageable);

    void exportGetOverallTransactions(Integer corporateId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    GetTotalAccountBalanceForCorporateResponse executeGetTotalAccountBalanceForCorporate(Integer corporateId);

    Page<GetTotalTransactionsResponse> executeGetTotalTransactions(Integer corporateId, Pageable pageable);

    void exportGetTotalTransactions(Integer corporateId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}
