/*Copyright (c) 2022-2023 wavemaker.com All Rights Reserved.This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.showcase.elite.accountsdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Account generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`account`")
public class Account implements Serializable {

    private Integer id;
    private String name;
    private String accountNo;
    private String type;
    private String currency;
    private Integer netBalance;
    private Integer accountTypeId;
    private Integer corporateId;
    private String fundManager;
    private String fundHouse;
    private Integer amountInvested;
    private Integer folioNo;
    private Integer fdNumber;
    private Integer fdUpperLimit;
    private Integer fdAmount;
    private AccountType accountType;
    private Corporate corporate;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`name`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`account_no`", nullable = true, length = 255)
    public String getAccountNo() {
        return this.accountNo;
    }

    public void setAccountNo(String accountNo) {
        this.accountNo = accountNo;
    }

    @Column(name = "`type`", nullable = true, length = 255)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "`currency`", nullable = true, length = 255)
    public String getCurrency() {
        return this.currency;
    }

    public void setCurrency(String currency) {
        this.currency = currency;
    }

    @Column(name = "`net_balance`", nullable = true, scale = 0, precision = 10)
    public Integer getNetBalance() {
        return this.netBalance;
    }

    public void setNetBalance(Integer netBalance) {
        this.netBalance = netBalance;
    }

    @Column(name = "`account_type_id`", nullable = true, scale = 0, precision = 10)
    public Integer getAccountTypeId() {
        return this.accountTypeId;
    }

    public void setAccountTypeId(Integer accountTypeId) {
        this.accountTypeId = accountTypeId;
    }

    @Column(name = "`corporate_id`", nullable = true, scale = 0, precision = 10)
    public Integer getCorporateId() {
        return this.corporateId;
    }

    public void setCorporateId(Integer corporateId) {
        this.corporateId = corporateId;
    }

    @Column(name = "`fund_manager`", nullable = true, length = 255)
    public String getFundManager() {
        return this.fundManager;
    }

    public void setFundManager(String fundManager) {
        this.fundManager = fundManager;
    }

    @Column(name = "`fund_house`", nullable = true, length = 255)
    public String getFundHouse() {
        return this.fundHouse;
    }

    public void setFundHouse(String fundHouse) {
        this.fundHouse = fundHouse;
    }

    @Column(name = "`amount_invested`", nullable = true, scale = 0, precision = 10)
    public Integer getAmountInvested() {
        return this.amountInvested;
    }

    public void setAmountInvested(Integer amountInvested) {
        this.amountInvested = amountInvested;
    }

    @Column(name = "`folio_no`", nullable = true, scale = 0, precision = 10)
    public Integer getFolioNo() {
        return this.folioNo;
    }

    public void setFolioNo(Integer folioNo) {
        this.folioNo = folioNo;
    }

    @Column(name = "`fd_number`", nullable = true, scale = 0, precision = 10)
    public Integer getFdNumber() {
        return this.fdNumber;
    }

    public void setFdNumber(Integer fdNumber) {
        this.fdNumber = fdNumber;
    }

    @Column(name = "`fd_upper_limit`", nullable = true, scale = 0, precision = 10)
    public Integer getFdUpperLimit() {
        return this.fdUpperLimit;
    }

    public void setFdUpperLimit(Integer fdUpperLimit) {
        this.fdUpperLimit = fdUpperLimit;
    }

    @Column(name = "`fd_amount`", nullable = true, scale = 0, precision = 10)
    public Integer getFdAmount() {
        return this.fdAmount;
    }

    public void setFdAmount(Integer fdAmount) {
        this.fdAmount = fdAmount;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`account_type_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_account_TO_account_tyel4vL`"))
    @Fetch(FetchMode.JOIN)
    public AccountType getAccountType() {
        return this.accountType;
    }

    public void setAccountType(AccountType accountType) {
        if(accountType != null) {
            this.accountTypeId = accountType.getId();
        }

        this.accountType = accountType;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`corporate_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_account_TO_corporate_uEuiW`"))
    @Fetch(FetchMode.JOIN)
    public Corporate getCorporate() {
        return this.corporate;
    }

    public void setCorporate(Corporate corporate) {
        if(corporate != null) {
            this.corporateId = corporate.getId();
        }

        this.corporate = corporate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Account)) return false;
        final Account account = (Account) o;
        return Objects.equals(getId(), account.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
